{"version":3,"sources":["images/reset.svg","components/Criteria.js","components/Guide.js","context/context.js","components/Songinfo.js","components/Songlist.js","components/CreateForm.js","components/Searchform.js","components/Starrate.js","components/Starshow.js","components/Text.js","components/Textlist.js","components/Login.js","components/Textresult.js","components/Commentform.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Criteria","state","console","log","style","border","pfadding","margin","Component","Guide","padding","axios","defaults","xsrfCookieName","xsrfHeaderName","Context","createContext","Provider","InfoConsumer","Consumer","InfoProvider","userInfo","userId","name","image","songInfo","comment","text","starsIdx","starsRating","difficulty","actions","setUserInfo","data","setState","setSongInfo","setComment","concat","setDifficulty","a","get","params","song","id","then","res","rating","i","this","length","toFixed","bind","catch","e","value","props","children","useConsumer","WrappedComponent","setId","loading","title","singer","chooseSong","onMode","songList","filter","item","parseInt","target","list","map","info","key","onClick","CreateForm","mode","handleMode","createSong","handleChange","handleSubmit","preventDefault","post","type","onSubmit","placeholder","onChange","SearchForm","songname","rawsongname","show","showContent","modeUpdate","backToSearch","rawtext","toLowerCase","replace","handleshowCri","handleshowGui","handleshowSrch","Starrate","_modeSetting","update","className","src","Reset","alt","_resetRating","prevProps","stars","starClass","idx","push","onMouseOver","_mouseOver","onMouseMove","onMouseLeave","onTouchMove","onTouchStart","onTouchEnd","_makeStars","Starshow","persist","nativeEvent","offsetX","clientWidth","v","starUpdate","defaultProp","authorized","handleUpdate","userName","userImage","put","message","handleRemove","delete","object","handleUpdateStar","index","moreReview","pastReview","array","responseGoogle","googleId","profileObj","imageUrl","onModeComment","responseFail","err","error","responseLogout","alert","showButton","clientId","buttonText","onLogoutSuccess","onSuccess","onFailure","cookiePolicy","React","onModeSearch","App","chooseContent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a03da88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reset.a6b1cf7a.svg\";","import React, { Component } from 'react';\r\nclass Criteria extends Component {\r\n    state = {  }\r\n    render() {\r\n        console.log('Criteria') \r\n        const style={\r\n            border: '1px solid black',\r\n            pfadding: '8px',\r\n            margin: '8px'\r\n        }\r\n        return (\r\n            \r\n            <div style={style}>\r\n                difficulty Criteria\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Criteria;","import React, { Component } from 'react';\r\nclass Guide extends Component {\r\n    state = {  }\r\n    render() {\r\n        console.log('Guide')\r\n        const style={\r\n            border: '1px solid black',\r\n            padding: '8px',\r\n            margin: '8px'\r\n        }\r\n        return (\r\n            <div style={style}>\r\n                This extension is to help users to calibrate vocal difficulty\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Guide;","import React, { Component, createContext } from 'react';\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nconst Context = createContext();\r\nconst { Provider, Consumer: InfoConsumer } = Context;\r\n\r\nclass InfoProvider extends Component {\r\n    state = {\r\n        userInfo: {\r\n            userId: '',\r\n            name: '',\r\n            image: '',\r\n\r\n        },\r\n        songInfo: [],\r\n        comment: [{\r\n            userId: 'Nan',\r\n            text: '',\r\n            starsIdx: 6,\r\n            starsRating: 2\r\n        }],\r\n        difficulty:0\r\n    }\r\n    actions = {\r\n        setUserInfo: (data) => {\r\n            this.setState({\r\n                userInfo: data\r\n            })\r\n        },\r\n        // setSongInfo의 concat 부분은 백으로만 구동시 수정=>songInfo:data\r\n        setSongInfo: (data) => {\r\n            this.setState({\r\n                songInfo: [data[0]]\r\n            })\r\n        },\r\n        setComment: (data) => {\r\n            this.setState({\r\n                comment: [].concat(data)\r\n            },\r\n            )\r\n        },\r\n        setDifficulty : async () => {\r\n            await axios.get(\"/api/comment/\", {\r\n                params: {\r\n                    song: this.state.songInfo[0].id\r\n                }\r\n            }).then(function(res){\r\n                var rating=0\r\n                for(var i in res.data){\r\n                    rating=rating+res.data[i].starsIdx+res.data[i].starsRating\r\n                }\r\n                this.setState({difficulty : (rating/res.data.length).toFixed(2)})\r\n                console.log(\"calculate difficulty\")\r\n            }.bind(this)    \r\n            ).catch(e => console.log(e))\r\n            return true\r\n        }\r\n        //setDifficulty: (data) => {\r\n        //   this.setState({\r\n        //        difficulty : data\r\n        //    })\r\n       // }\r\n    }\r\n    render() {\r\n        const { state, actions } = this;\r\n        const value = { state, actions };\r\n        return (\r\n            <Provider value={value}>\r\n                {this.props.children}\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\nfunction useConsumer(WrappedComponent) {\r\n    return function useConsumer(props) {\r\n        return (\r\n            <InfoConsumer>\r\n                {\r\n                    ({ state, actions }) => (\r\n                        <WrappedComponent\r\n                            {...props}\r\n                            userInfo={state.userInfo}\r\n                            songInfo={state.songInfo}\r\n                            comment={state.comment}\r\n                            difficulty={state.difficulty}\r\n                            setId={actions.setId}\r\n                            setSongInfo={actions.setSongInfo}\r\n                            setComment={actions.setComment}\r\n                            setUserInfo={actions.setUserInfo}\r\n                            setDifficulty={actions.setDifficulty}\r\n                        />\r\n                        //{..props}는 parents props, 나머지는 context props를 의미\r\n                    )\r\n                }\r\n            </InfoConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport {\r\n    InfoConsumer,\r\n    InfoProvider,\r\n    useConsumer\r\n}","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { useConsumer } from '../context/context';\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass Songinfo extends Component {\r\n    state = {\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.setDifficulty()){\r\n            this.setState({loading : false})\r\n        }\r\n    }\r\n    render() {\r\n        const { song } = this.props\r\n        console.log(song)\r\n        console.log(this.state.loading)\r\n        if (this.state.loading == false) {\r\n            return (\r\n                <div>\r\n                    노래제목: {song.title}   가수: {song.singer}  난이도:{this.props.difficulty}\r\n                </div>\r\n\r\n            );\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading..\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default useConsumer(Songinfo);","import React, { Component } from 'react';\r\nimport { useConsumer } from '../context/context';\r\nimport Songinfo from './Songinfo'\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass Songlist extends Component {\r\n\r\n    chooseSong=async(e)=>{\r\n        const{setSongInfo,setComment,onMode}=this.props\r\n        const data = this.props.songList.filter(\r\n            item=>item.id===parseInt(e.target.id)\r\n        )\r\n        console.log(data)\r\n        setSongInfo(data);\r\n        console.log(this.props.songInfo)\r\n        await axios.get(\"/api/comment/\",{\r\n            params:{\r\n                song:e.target.id\r\n            }\r\n        }).then(res=>{\r\n            setComment(res.data)\r\n        }).then(onMode())\r\n    }\r\n    render() { \r\n\r\n        const style={\r\n            border: '1px solid black',\r\n            padding: '8px',\r\n            margin: '8px'\r\n        };\r\n        const {songList}=this.props\r\n        let list=songList.map(\r\n            (info)=>(\r\n            <div key={info.id} style={style}>\r\n            <Songinfo song={info}></Songinfo>\r\n            <button id ={info.id} onClick={this.chooseSong}>평가</button>\r\n            </div>\r\n            \r\n        ));\r\n        return ( \r\n            <div>{list}</div>\r\n\r\n        );\r\n    }\r\n}\r\n \r\n \r\nexport default useConsumer(Songlist);","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\nclass CreateForm extends Component {\r\n    state = {\r\n        mode: 'default',\r\n        title: '',\r\n        singer: ''\r\n    }\r\n    handleMode = () => {\r\n        this.props.onMode('result')\r\n    }\r\n    createSong = () => {\r\n        this.setState({\r\n            mode: 'create'\r\n        })\r\n    }\r\n    handleChange = (e) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: target.value\r\n        })\r\n    }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        await axios.post(\"/api/song/\", {\r\n            title: this.state.title,\r\n            singer: this.state.singer\r\n        })\r\n        this.props.onMode(this.state.title)\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.mode === 'default') {\r\n            return (\r\n                <div>\r\n                    <div>찾으시는 노래가 없나요?</div>\r\n                    <button onClick={this.createSong}\r\n                    >다른 사용자를 위해 노래 정보를 입력해주세요</button>\r\n                    <button type=\"button\" onClick={this.handleMode}>뒤로</button>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.state.mode === 'create') {\r\n            return (\r\n                <div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input\r\n                            name=\"title\"\r\n                            type=\"text\"\r\n                            placeholder=\"제목\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.title}\r\n                        ></input>\r\n                        <input\r\n                            name=\"singer\"\r\n                            type=\"text\"\r\n                            placeholder=\"가수\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.singer}\r\n                        ></input>\r\n                        <button type=\"submit\"\r\n                        >노래 정보 제출</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreateForm;","import React, { Component } from 'react';\r\nimport Criteria from './Criteria'\r\nimport Guide from './Guide';\r\nimport Songlist from './Songlist';\r\nimport axios from \"axios\";\r\nimport CreateForm from './CreateForm';\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\nclass SearchForm extends Component {\r\n    state = {\r\n        songname: '',\r\n        rawsongname: '',\r\n        show: '',\r\n        songList: [{}]\r\n    }\r\n    showContent = () => {\r\n        const { show } = this.state;\r\n        if (show === 'criteria') {\r\n            return <Criteria></Criteria>\r\n        } else if (show === 'guide') {\r\n            return <Guide></Guide>\r\n        } else if (show === 'list') {\r\n            return (\r\n                <div>\r\n                    <Songlist onMode={this.modeUpdate} songList={this.state.songList}></Songlist>\r\n                    <CreateForm onMode={this.backToSearch}></CreateForm>\r\n                </div>\r\n            )\r\n        } else if (show === 'create') {\r\n            return <CreateForm onMode={this.backToSearch}></CreateForm>\r\n        }\r\n        else {\r\n            return <div></div>\r\n        }\r\n\r\n    }\r\n    backToSearch = async (title) =>{\r\n        await axios.get(\"/api/song/\", {\r\n            params: {\r\n                title: title\r\n            }\r\n        }).then(res => this.setState({\r\n            show : 'list',\r\n            songList: res.data\r\n        }))\r\n    }\r\n    modeUpdate = () => {\r\n        this.props.onMode('result')\r\n    }\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        let rawtext = e.target.value\r\n        let text = rawtext.toLowerCase().replace(/(\\s*)/g, \"\");\r\n        this.setState({\r\n            rawsongname: rawtext,\r\n            songname: text,\r\n        })\r\n    }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        await axios.get(\"/api/song/\", {\r\n            params: {\r\n                title: this.state.songname\r\n            }\r\n        }).then(res => this.setState({\r\n            songList: res.data\r\n        }))\r\n        if (this.state.songList.length === 0) {\r\n            this.setState({\r\n                show: 'create'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                show: 'list'\r\n            })\r\n        }\r\n    }\r\n    handleshowCri = () => {\r\n        this.setState({\r\n            show: 'criteria'\r\n        })\r\n    }\r\n    handleshowGui = () => {\r\n        this.setState({\r\n            show: 'guide'\r\n        })\r\n    }\r\n    handleshowSrch = () => {\r\n        this.setState({\r\n            show: 'list'\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        name='rawsongname'\r\n                        placeholder='노래 제목을 입력하세요'\r\n                        onChange={this.handleChange}\r\n                        value={this.state.rawsongname}\r\n                    ></input>\r\n                    <button type='submit'>search</button>\r\n                </form>\r\n                <button type=\"submit\" onClick={this.handleshowGui}>도움말</button>\r\n                <button type=\"submit\" onClick={this.handleshowCri}>난이도</button>\r\n                {this.showContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchForm;","import React, { Component } from 'react';\nimport Reset from '../images/reset.svg';\nimport '../css/Starrate.css';\n\nclass Starrate extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            update:this.props.update\n        }\n        this._resetRating = this._resetRating.bind(this);\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.update !==prevProps.update){\n            this.setState({\n                update:this.props.update\n            })\n        }\n    }\n    _modeSetting=()=>{\n        const{update}=this.state\n        if(update){\n            return(<div className=\"reset__btn\">\n                    <img src={Reset} alt=\"reset\" onClick={(e)=>{this._resetRating(e)}} />\n                </div>)\n        }\n    }\n\n    _resetRating(e){\n        if(e.type === \"mouseleave\" || e.type === \"onTouchEnd\"){        \n            this.props.onChange(this.props.starsIdx,this.props.starsRating);\n        }else if(e.type === \"click\"){\n            this.props.onChange(0,0);\n        }    \n    }\n\n    _makeStars(){\n        let stars = [];\n        for(let i = 0; i < 10; i+=2){\n            let starClass = \"star__rate\";\n            \n             if(this.props.rating !== 0){\n                if (i <= this.props.idx) {               \n                    if(this.props.idx === i && this.props.rating % 2 !== 0){\n                        starClass += ' is-half-selected';\n                    }else{\n                        starClass += ' is-selected';\n                    }\n                }\n            }else if(this.props.starsRating !== 0){\n                if (i <= this.props.starsIdx) {            \n                    if(this.props.starsIdx === i && this.props.starsRating % 2 !== 0){\n                        starClass += ' is-half-selected';\n                    }else{\n                        starClass += ' is-selected';\n                    }\n                }\n            }\n            if(this.state.update){\n            stars.push(\n                <label key={i} \n                    className={starClass} \n                    onClick={()=>{this.props.onChange(this.props.idx,this.props.rating)}}\n                    onMouseOver={(e)=>{this.props._mouseOver(e,i)}}\n                    onMouseMove={(e)=>{this.props._mouseOver(e,i)}}\n                    onMouseLeave={(e)=>{this._resetRating(e)}}                    \n                    onTouchMove={(e)=>{this.props._mouseOver(e,i)}}\n                    onTouchStart={(e)=>{this.props._mouseOver(e,i)}}\n                    onTouchEnd={(e)=>{this._resetRating(e)}}\n                >\n                </label>\n            )\n            }else{\n                stars.push(\n                    <label key={i} className={starClass}></label>\n                )\n            }\n        }\n        return stars;\n    }\n\n    render() {\n        return (\n            <div className=\"starRate__wrap\">\n                {this._makeStars()}\n                {this._modeSetting()}        \n            </div>\n        );\n    }\n}\n\nexport default Starrate;","import React, { Component } from 'react';\nimport Starrate from './Starrate';\n\nclass Starshow extends Component {\n  static defaultProp={\n    starsIdx:0,\n    starsRating:0,\n  }\n  state = {\n    idx:0,\n    rating: 0,    \n    starsIdx: this.props.starsIdx,\n    starsRating: this.props.starsRating,\n  }\n\n  _mouseOver = (e,i) => {\n    e.persist()\n    let offsetX = e.nativeEvent.offsetX; \n    let clientX = e.target.clientWidth;\n\n    if(offsetX > clientX / 2){\n      let value = 2;\n      this.setState({\n        idx:i,\n        rating:value\n      });\n    }else{\n      let value = 1;\n      this.setState({\n        idx:i,\n        rating:value\n      });\n    }\n  }\n\n  handleChange = (i,v) => {\n    this.setState({\n      idx:0,\n      rating:0,\n      starsIdx:i,\n      starsRating:v\n    });\n    this.props.starUpdate(this.state)\n  }\n\n  render() {\n    return (\n      <Starrate \n        _mouseOver={this._mouseOver}\n        onChange={this.handleChange} \n        idx={this.state.idx} \n        rating={this.state.rating}         \n        starsIdx={this.state.starsIdx}         \n        starsRating={this.state.starsRating}\n        update={this.props.update}\n      />\n    );\n  }\n}\n\nexport default Starshow;","import React, { Component } from 'react';\r\nimport { useConsumer } from '../context/context';\r\nimport Starshow from './Starshow';\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass Text extends Component {\r\n    state = {\r\n        update: false,\r\n        text: '',\r\n        starsIdx: this.props.info.starsIdx,\r\n        starsRating: this.props.info.starsRating,\r\n    }\r\n    authorized = false\r\n    handleUpdate = async () => {\r\n        const { update, text, starsIdx, starsRating } = this.state;\r\n        const { info, comment, setComment } = this.props;\r\n        if (update) {\r\n            setComment(\r\n                comment.map(item => (info.id === item.id ?\r\n                    {\r\n                        id: this.props.info.id,\r\n                        text: text,\r\n                        starsIdx: starsIdx,\r\n                        starsRating: starsRating,\r\n                        userId: info.userId,\r\n                        userName: info.userName,\r\n                        userImage: info.userImage,\r\n                        song: this.props.songInfo[0].id\r\n                    } : item))\r\n            )\r\n            await axios.put(`/api/comment/${this.props.info.id}/`, {\r\n                id: this.props.info.id,\r\n                text: text,\r\n                starsIdx: starsIdx,\r\n                starsRating: starsRating,\r\n                userId: info.userId,\r\n                userName: info.userName,\r\n                userImage: info.userImage,\r\n                song: this.props.songInfo[0].id\r\n            }).then(\r\n                this.props.setDifficulty()\r\n            ).catch(e => console.log(e.message))\r\n        } else {\r\n            this.setState({ text: info.text })\r\n        }\r\n        this.setState({\r\n            update: !update\r\n        })\r\n    }\r\n    handleRemove = async () => {\r\n        const { setComment, comment } = this.props\r\n        await axios.delete(`/api/comment/${this.props.info.id}`)\r\n        .then(this.props.onMode(\"result\"))\r\n        setComment(comment.filter(object => object.id !== this.props.info.id))\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    handleUpdateStar = (data) => {\r\n        this.setState({\r\n            starsIdx: data.starsIdx,\r\n            starsRating: data.starsRating\r\n        })\r\n    }\r\n    render() {\r\n        const { update } = this.state\r\n        if (this.props.info.userId === this.props.userInfo.userId) {\r\n            this.authorized = true\r\n        }\r\n        const style = {\r\n            border: '1px solid black',\r\n            padding: '8px',\r\n            margin: '8px'\r\n        }\r\n        return (\r\n            <div style={style}>\r\n                {\r\n                    update ?\r\n                        <div>\r\n                            <input\r\n                                name=\"text\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.text}\r\n                            ></input>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            {this.props.info.text}\r\n                        </div>\r\n                }\r\n                <Starshow\r\n                    starsIdx={this.state.starsIdx}\r\n                    starsRating={this.state.starsRating}\r\n                    update={this.state.update}\r\n                    starUpdate={this.handleUpdateStar}\r\n                ></Starshow> {this.state.starsIdx + this.state.starsRating}/10\r\n            {\r\n                    this.authorized ?\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                onClick={this.handleUpdate}\r\n                            >{update ? \"입력\" : \"수정\"}</button>\r\n\r\n                            <button\r\n                                type=\"submit\"\r\n                                onClick={this.handleRemove}\r\n                            >삭제</button>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default useConsumer(Text);","import React, { Component } from 'react';\r\nimport Text from './Text';\r\nimport { useConsumer } from '../context/context';\r\nclass Textlist extends Component {\r\n    state = { index: 0 }\r\n    moreReview = () => {\r\n        this.setState({ index: this.state.index + 5 })\r\n    }\r\n    pastReview = () => {\r\n        this.setState({ index: this.state.index-5})\r\n    }\r\n    render() {\r\n        const { comment } = this.props\r\n        const list = comment.map(\r\n            function (info, index, array) {\r\n                if ((index > array.length - this.state.index - 5)\r\n                &&(index<array.length-this.state.index)) {\r\n                    return (\r\n                        <div key={index}>\r\n                            <Text info={info} onMode={this.props.onMode}></Text>\r\n                        </div>\r\n                    )\r\n                }\r\n            }.bind(this)\r\n            // 같은 song 내 comment 별 id가 필요할 수도 있음. \r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <div>{list}</div>\r\n                <button type=\"submit\" onClick={this.moreReview}\r\n                >more review</button>\r\n                <button type=\"submit\" onClick={this.pastReview}\r\n                >past review</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default useConsumer(Textlist);","import React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { useConsumer } from \"../context/context\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      name:'',\n      image:'',\n      }\n  }\n\n  responseGoogle = async (res)=>{\n    const {userInfo,setUserInfo}=this.props\n    setUserInfo({\n      userId:res.googleId,\n      name:res.profileObj.name,\n      image:res.profileObj.imageUrl\n    })\n    if (userInfo.userId!==0){\n      this.props.onModeComment()\n    }\n  }\n\n  responseFail =(err)=>{\n    console.error(err);\n  }\n  responseLogout=()=>{\n    const {setUserInfo}=this.props\n    alert('로그아웃 되었습니다.')\n    setUserInfo({\n      userId:'',\n      name:'',\n      image:'',\n    })\n    console.log('logout')\n  }\n\n  showButton=()=>{\n    if(!this.props.userInfo.userId){\n      return(\n      <div>\n          <GoogleLogin\n            clientId=\"759462615946-ok4nmhfk4j05bv53s7mbgfs22fm0d4og.apps.googleusercontent.com\"\n            buttonText=\"의견 남기기\"\n            onSuccess={this.responseGoogle} \n            onFailure={this.responseFail}\n            cookiePolicy={'single_host_origin'}\n          />\n      </div>\n      )\n    }else{\n      return(\n      <div>\n        <GoogleLogout\n        clientId=\"759462615946-ok4nmhfk4j05bv53s7mbgfs22fm0d4og.apps.googleusercontent.com\"\n        buttonText=\"Logout\"\n        onLogoutSuccess={this.responseLogout}\n        ></GoogleLogout>\n\n        <button onClick={this.props.onModeComment}> 의견 남기기</button>\n      </div>\n      )\n    }\n  }\n\n\n  render() {\n    console.log(this.props.userInfo)\n    return (\n        <div>\n        {this.showButton()}\n        </div>\n      );\n  }\n}\n\nexport default useConsumer(Login);\n","import React, {Component } from 'react';\r\nimport Songinfo from './Songinfo';\r\nimport Textlist from './Textlist';\r\nimport { useConsumer } from '../context/context';\r\nimport Login from './Login';\r\n\r\nclass Textresult extends Component {\r\n    state = {  }\r\n\r\n    onModeComment=()=>{\r\n        this.props.onMode('comment')\r\n    }\r\n    onModeSearch=()=>{\r\n        this.props.onMode('search')\r\n    }\r\n    render() {\r\n        const{songInfo}=this.props\r\n        return ( \r\n        <div>\r\n            <Songinfo song={songInfo[0]}></Songinfo>\r\n            <div>총 {this.props.comment.length}명이 평가하였습니다.</div>\r\n            \r\n            <Textlist onMode = {this.props.onMode}></Textlist>\r\n            \r\n            <Login onModeComment={this.onModeComment}></Login>\r\n            <button type=\"button\" onClick={this.onModeSearch}> 뒤로 </button>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default useConsumer(Textresult);","import React, { Component } from 'react';\r\nimport Starshow from './Starshow';\r\nimport { useConsumer } from '../context/context';\r\nimport Songinfo from './Songinfo';\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass Commentform extends Component {\r\n    state = {\r\n        userId: this.props.userInfo.userId,\r\n        userName: this.props.userInfo.name,\r\n        userImage: this.props.userInfo.image,\r\n        // userId와 UserName을 백에서 추가, user 프로필 사진도 받을 수 있는데 나중에 디자인할 때 고려해봐야할듯\r\n        song: this.props.songInfo[0].title,\r\n        text: '',\r\n        starsIdx: '',\r\n        starsRating: ''\r\n    }\r\n    handleMode = () => {\r\n        this.props.onMode('result')\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    handleUpdateStar = (data) => {\r\n        this.setState({\r\n            starsIdx: data.starsIdx,\r\n            starsRating: data.starsRating\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        const { setComment, comment } = this.props\r\n        e.preventDefault();\r\n        await axios.post(\"/api/comment/\", {\r\n            song: this.props.songInfo[0].id,\r\n            text: this.state.text,\r\n            starsIdx: this.state.starsIdx,\r\n            starsRating: this.state.starsRating,\r\n            userId: this.state.userId,\r\n            userName: this.state.userName,\r\n            userImage: this.state.userImage\r\n        }).then(res => {\r\n            setComment(comment.concat({\r\n                id: res.data.id,\r\n                song: this.props.songInfo[0].id,\r\n                text: this.state.text,\r\n                starsIdx: this.state.starsIdx,\r\n                starsRating: this.state.starsRating,\r\n                userId: this.state.userId,\r\n                userName: this.state.userName,\r\n                userImage: this.state.userImage\r\n            }))\r\n            console.log(res.data)\r\n        }\r\n        )\r\n        this.handleMode()\r\n        //새로운 comment 작성 후 장고로 post하는 기능 만들기\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Songinfo song={this.props.songInfo[0]}></Songinfo>\r\n                <div>총 {this.props.comment.length}명이 평가하였습니다.</div>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <img src={this.state.userImage} alt=\"사용자 이미지\" ></img>\r\n                    <input\r\n                        name=\"text\"\r\n                        placeholder=\"이곳에 의견을 남겨주세요\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.text}\r\n                    ></input>\r\n                    <button type=\"submit\"\r\n                    >댓글 입력</button>\r\n                    <div>\r\n                        당신이 평가한 난이도는?\r\n                    <Starshow update={true} starUpdate={this.handleUpdateStar} ></Starshow>\r\n                        {this.state.starsIdx + this.state.starsRating}/10\r\n                    {/* 점수 입력할 떄 NaN이 나오는데 나중에 수정 예정 */}\r\n                    </div>\r\n                </form>\r\n                <button type=\"button\" onClick={this.handleMode}>뒤로</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default useConsumer(Commentform);","import React, { Component } from 'react';\nimport SearchForm from './components/Searchform';\nimport Textresult from './components/Textresult';\nimport Commentform from './components/Commentform';\nimport { InfoProvider } from './context/context';\nclass App extends Component {\n  state = { \n    mode:''\n  }\n  handleMode=(mode)=>{\n    this.setState({\n      mode:mode\n    })\n  }\n  chooseContent=()=>{\n    const{mode}=this.state\n    if (mode==='result'){\n      return (<Textresult onMode={this.handleMode}></Textresult>)\n    }else if(mode==='comment'){\n      return (<Commentform onMode={this.handleMode}></Commentform>)\n    }else{\n      return (<SearchForm onMode={this.handleMode}></SearchForm>)\n    }\n  }\n  render() { \n    console.log('app')\n    console.log(this.state.mode)\n    return (  \n      <InfoProvider>\n        {this.chooseContent()}\n      </InfoProvider>\n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}