{"version":3,"sources":["images/reset.svg","components/Criteria.js","components/Guide.js","context/context.js","components/Songinfo.js","components/Songlist.js","components/CreateForm.js","components/Searchform.js","components/Starrate.js","components/Starshow.js","components/Text.js","components/Textlist.js","components/Login.js","components/Textresult.js","components/Commentform.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Criteria","state","console","log","style","border","pfadding","margin","Component","Guide","padding","Context","createContext","Provider","InfoConsumer","Consumer","InfoProvider","userInfo","userId","name","image","songInfo","comment","text","starsIdx","starsRating","difficulty","actions","setUserInfo","data","setState","setSongInfo","setComment","concat","setDifficulty","value","this","props","children","useConsumer","WrappedComponent","setId","axios","defaults","xsrfCookieName","xsrfHeaderName","loading","get","params","song","id","then","res","rating","i","length","toFixed","bind","catch","e","getDifficulty","title","singer","chooseSong","a","onMode","songList","filter","item","parseInt","target","list","map","info","key","onClick","CreateForm","mode","handleMode","createSong","handleChange","handleSubmit","preventDefault","post","type","onSubmit","placeholder","onChange","SearchForm","songname","rawsongname","show","showContent","modeUpdate","backToSearch","rawtext","toLowerCase","replace","handleshowCri","handleshowGui","handleshowSrch","Starrate","_modeSetting","update","className","src","Reset","alt","_resetRating","prevProps","stars","starClass","idx","push","onMouseOver","_mouseOver","onMouseMove","onMouseLeave","onTouchMove","onTouchStart","onTouchEnd","_makeStars","Starshow","persist","nativeEvent","offsetX","clientWidth","v","starUpdate","defaultProp","authorized","handleUpdate","userName","userImage","put","message","handleRemove","delete","object","handleUpdateStar","index","moreReview","pastReview","array","responseGoogle","googleId","profileObj","imageUrl","onModeComment","responseFail","err","error","responseLogout","alert","showButton","clientId","buttonText","onLogoutSuccess","onSuccess","onFailure","cookiePolicy","React","onModeSearch","App","chooseContent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb30d3e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reset.a6b1cf7a.svg\";","import React, { Component } from 'react';\r\nclass Criteria extends Component {\r\n    state = {  }\r\n    render() {\r\n        console.log('Criteria') \r\n        const style={\r\n            border: '1px solid black',\r\n            pfadding: '8px',\r\n            margin: '8px'\r\n        }\r\n        return (\r\n            \r\n            <div style={style}>\r\n                difficulty Criteria\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Criteria;","import React, { Component } from 'react';\r\nclass Guide extends Component {\r\n    state = {  }\r\n    render() {\r\n        console.log('Guide')\r\n        const style={\r\n            border: '1px solid black',\r\n            padding: '8px',\r\n            margin: '8px'\r\n        }\r\n        return (\r\n            <div style={style}>\r\n                This extension is to help users to calibrate vocal difficulty\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Guide;","import React, { Component, createContext } from 'react';\r\n\r\nconst Context = createContext();\r\nconst { Provider, Consumer: InfoConsumer } = Context;\r\n\r\nclass InfoProvider extends Component {\r\n    state = {\r\n        userInfo: {\r\n            userId: '',\r\n            name: '',\r\n            image: '',\r\n\r\n        },\r\n        songInfo: [],\r\n        comment: [{\r\n            userId: 'Nan',\r\n            text: '',\r\n            starsIdx: 6,\r\n            starsRating: 2\r\n        }],\r\n        difficulty:0\r\n    }\r\n    actions = {\r\n        setUserInfo: (data) => {\r\n            this.setState({\r\n                userInfo: data\r\n            })\r\n        },\r\n        // setSongInfo의 concat 부분은 백으로만 구동시 수정=>songInfo:data\r\n        setSongInfo: (data) => {\r\n            this.setState({\r\n                songInfo: [data[0]]\r\n            })\r\n        },\r\n        setComment: (data) => {\r\n            this.setState({\r\n                comment: [].concat(data)\r\n            },\r\n            )\r\n        },\r\n        setDifficulty: (data) => {\r\n            this.setState({\r\n                difficulty : data\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { state, actions } = this;\r\n        const value = { state, actions };\r\n        return (\r\n            <Provider value={value}>\r\n                {this.props.children}\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\nfunction useConsumer(WrappedComponent) {\r\n    return function useConsumer(props) {\r\n        return (\r\n            <InfoConsumer>\r\n                {\r\n                    ({ state, actions }) => (\r\n                        <WrappedComponent\r\n                            {...props}\r\n                            userInfo={state.userInfo}\r\n                            songInfo={state.songInfo}\r\n                            comment={state.comment}\r\n                            difficulty={state.difficulty}\r\n                            setId={actions.setId}\r\n                            setSongInfo={actions.setSongInfo}\r\n                            setComment={actions.setComment}\r\n                            setUserInfo={actions.setUserInfo}\r\n                            setDifficulty={actions.setDifficulty}\r\n                        />\r\n                        //{..props}는 parents props, 나머지는 context props를 의미\r\n                    )\r\n                }\r\n            </InfoConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport {\r\n    InfoConsumer,\r\n    InfoProvider,\r\n    useConsumer\r\n}","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { useConsumer } from '../context/context';\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass Songinfo extends Component {\r\n    state = {\r\n        loading: true\r\n    }\r\n    getDifficulty() {\r\n        axios.get(\"/api/comment/\", {\r\n            params: {\r\n                song: this.props.song.id\r\n            }\r\n        }).then(function(res){\r\n            var rating=0\r\n            for(var i in res.data){\r\n                rating=rating+res.data[i].starsIdx+res.data[i].starsRating\r\n            }\r\n            this.props.setDifficulty((rating/res.data.length).toFixed(2))\r\n            console.log(\"calculate difficulty\")\r\n            console.log(this.props.difficulty)\r\n        }.bind(this)    \r\n        ).then(\r\n            this.setState({ loading: false })\r\n        ).catch(e => console.log(e))\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"?\")\r\n        this.getDifficulty()\r\n    }\r\n    render() {\r\n        const { song } = this.props\r\n        console.log(song)\r\n        console.log(this.state.loading)\r\n        if (this.state.loading == false) {\r\n            return (\r\n                <div>\r\n                    노래제목: {song.title}   가수: {song.singer}  난이도:{this.props.difficulty}\r\n                </div>\r\n\r\n            );\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading..\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default useConsumer(Songinfo);","import React, { Component } from 'react';\r\nimport { useConsumer } from '../context/context';\r\nimport Songinfo from './Songinfo'\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass Songlist extends Component {\r\n\r\n    chooseSong=async(e)=>{\r\n        const{setSongInfo,setComment,onMode}=this.props\r\n        const data = this.props.songList.filter(\r\n            item=>item.id===parseInt(e.target.id)\r\n        )\r\n        console.log(data)\r\n        setSongInfo(data);\r\n        console.log(this.props.songInfo)\r\n        await axios.get(\"/api/comment/\",{\r\n            params:{\r\n                song:e.target.id\r\n            }\r\n        }).then(res=>{\r\n            setComment(res.data)\r\n        }).then(onMode())\r\n    }\r\n    render() { \r\n\r\n        const style={\r\n            border: '1px solid black',\r\n            padding: '8px',\r\n            margin: '8px'\r\n        };\r\n        const {songList}=this.props\r\n        let list=songList.map(\r\n            (info)=>(\r\n            <div key={info.id} style={style}>\r\n            <Songinfo song={info}></Songinfo>\r\n            <button id ={info.id} onClick={this.chooseSong}>평가</button>\r\n            </div>\r\n            \r\n        ));\r\n        return ( \r\n            <div>{list}</div>\r\n\r\n        );\r\n    }\r\n}\r\n \r\n \r\nexport default useConsumer(Songlist);","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\nclass CreateForm extends Component {\r\n    state = {\r\n        mode: 'default',\r\n        title: '',\r\n        singer: ''\r\n    }\r\n    handleMode = () => {\r\n        this.props.onMode('result')\r\n    }\r\n    createSong = () => {\r\n        this.setState({\r\n            mode: 'create'\r\n        })\r\n    }\r\n    handleChange = (e) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: target.value\r\n        })\r\n    }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        await axios.post(\"/api/song/\", {\r\n            title: this.state.title,\r\n            singer: this.state.singer\r\n        })\r\n        this.props.onMode(this.state.title)\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.mode === 'default') {\r\n            return (\r\n                <div>\r\n                    <div>찾으시는 노래가 없나요?</div>\r\n                    <button onClick={this.createSong}\r\n                    >다른 사용자를 위해 노래 정보를 입력해주세요</button>\r\n                    <button type=\"button\" onClick={this.handleMode}>뒤로</button>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.state.mode === 'create') {\r\n            return (\r\n                <div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input\r\n                            name=\"title\"\r\n                            type=\"text\"\r\n                            placeholder=\"제목\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.title}\r\n                        ></input>\r\n                        <input\r\n                            name=\"singer\"\r\n                            type=\"text\"\r\n                            placeholder=\"가수\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.singer}\r\n                        ></input>\r\n                        <button type=\"submit\"\r\n                        >노래 정보 제출</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreateForm;","import React, { Component } from 'react';\r\nimport Criteria from './Criteria'\r\nimport Guide from './Guide';\r\nimport Songlist from './Songlist';\r\nimport axios from \"axios\";\r\nimport CreateForm from './CreateForm';\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\nclass SearchForm extends Component {\r\n    state = {\r\n        songname: '',\r\n        rawsongname: '',\r\n        show: '',\r\n        songList: [{}]\r\n    }\r\n    showContent = () => {\r\n        const { show } = this.state;\r\n        if (show === 'criteria') {\r\n            return <Criteria></Criteria>\r\n        } else if (show === 'guide') {\r\n            return <Guide></Guide>\r\n        } else if (show === 'list') {\r\n            return (\r\n                <div>\r\n                    <Songlist onMode={this.modeUpdate} songList={this.state.songList}></Songlist>\r\n                    <CreateForm onMode={this.backToSearch}></CreateForm>\r\n                </div>\r\n            )\r\n        } else if (show === 'create') {\r\n            return <CreateForm onMode={this.backToSearch}></CreateForm>\r\n        }\r\n        else {\r\n            return <div></div>\r\n        }\r\n\r\n    }\r\n    backToSearch = async (title) =>{\r\n        await axios.get(\"/api/song/\", {\r\n            params: {\r\n                title: title\r\n            }\r\n        }).then(res => this.setState({\r\n            show : 'list',\r\n            songList: res.data\r\n        }))\r\n    }\r\n    modeUpdate = () => {\r\n        this.props.onMode('result')\r\n    }\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        let rawtext = e.target.value\r\n        let text = rawtext.toLowerCase().replace(/(\\s*)/g, \"\");\r\n        this.setState({\r\n            rawsongname: rawtext,\r\n            songname: text,\r\n        })\r\n    }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        await axios.get(\"/api/song/\", {\r\n            params: {\r\n                title: this.state.songname\r\n            }\r\n        }).then(res => this.setState({\r\n            songList: res.data\r\n        }))\r\n        if (this.state.songList.length === 0) {\r\n            this.setState({\r\n                show: 'create'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                show: 'list'\r\n            })\r\n        }\r\n    }\r\n    handleshowCri = () => {\r\n        this.setState({\r\n            show: 'criteria'\r\n        })\r\n    }\r\n    handleshowGui = () => {\r\n        this.setState({\r\n            show: 'guide'\r\n        })\r\n    }\r\n    handleshowSrch = () => {\r\n        this.setState({\r\n            show: 'list'\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        name='rawsongname'\r\n                        placeholder='노래 제목을 입력하세요'\r\n                        onChange={this.handleChange}\r\n                        value={this.state.rawsongname}\r\n                    ></input>\r\n                    <button type='submit'>search</button>\r\n                </form>\r\n                <button type=\"submit\" onClick={this.handleshowGui}>도움말</button>\r\n                <button type=\"submit\" onClick={this.handleshowCri}>난이도</button>\r\n                {this.showContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchForm;","import React, { Component } from 'react';\nimport Reset from '../images/reset.svg';\nimport '../css/Starrate.css';\n\nclass Starrate extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            update:this.props.update\n        }\n        this._resetRating = this._resetRating.bind(this);\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.update !==prevProps.update){\n            this.setState({\n                update:this.props.update\n            })\n        }\n    }\n    _modeSetting=()=>{\n        const{update}=this.state\n        if(update){\n            return(<div className=\"reset__btn\">\n                    <img src={Reset} alt=\"reset\" onClick={(e)=>{this._resetRating(e)}} />\n                </div>)\n        }\n    }\n\n    _resetRating(e){\n        if(e.type === \"mouseleave\" || e.type === \"onTouchEnd\"){        \n            this.props.onChange(this.props.starsIdx,this.props.starsRating);\n        }else if(e.type === \"click\"){\n            this.props.onChange(0,0);\n        }    \n    }\n\n    _makeStars(){\n        let stars = [];\n        for(let i = 0; i < 10; i+=2){\n            let starClass = \"star__rate\";\n            \n             if(this.props.rating !== 0){\n                if (i <= this.props.idx) {               \n                    if(this.props.idx === i && this.props.rating % 2 !== 0){\n                        starClass += ' is-half-selected';\n                    }else{\n                        starClass += ' is-selected';\n                    }\n                }\n            }else if(this.props.starsRating !== 0){\n                if (i <= this.props.starsIdx) {            \n                    if(this.props.starsIdx === i && this.props.starsRating % 2 !== 0){\n                        starClass += ' is-half-selected';\n                    }else{\n                        starClass += ' is-selected';\n                    }\n                }\n            }\n            if(this.state.update){\n            stars.push(\n                <label key={i} \n                    className={starClass} \n                    onClick={()=>{this.props.onChange(this.props.idx,this.props.rating)}}\n                    onMouseOver={(e)=>{this.props._mouseOver(e,i)}}\n                    onMouseMove={(e)=>{this.props._mouseOver(e,i)}}\n                    onMouseLeave={(e)=>{this._resetRating(e)}}                    \n                    onTouchMove={(e)=>{this.props._mouseOver(e,i)}}\n                    onTouchStart={(e)=>{this.props._mouseOver(e,i)}}\n                    onTouchEnd={(e)=>{this._resetRating(e)}}\n                >\n                </label>\n            )\n            }else{\n                stars.push(\n                    <label key={i} className={starClass}></label>\n                )\n            }\n        }\n        return stars;\n    }\n\n    render() {\n        return (\n            <div className=\"starRate__wrap\">\n                {this._makeStars()}\n                {this._modeSetting()}        \n            </div>\n        );\n    }\n}\n\nexport default Starrate;","import React, { Component } from 'react';\nimport Starrate from './Starrate';\n\nclass Starshow extends Component {\n  static defaultProp={\n    starsIdx:0,\n    starsRating:0,\n  }\n  state = {\n    idx:0,\n    rating: 0,    \n    starsIdx: this.props.starsIdx,\n    starsRating: this.props.starsRating,\n  }\n\n  _mouseOver = (e,i) => {\n    e.persist()\n    let offsetX = e.nativeEvent.offsetX; \n    let clientX = e.target.clientWidth;\n\n    if(offsetX > clientX / 2){\n      let value = 2;\n      this.setState({\n        idx:i,\n        rating:value\n      });\n    }else{\n      let value = 1;\n      this.setState({\n        idx:i,\n        rating:value\n      });\n    }\n  }\n\n  handleChange = (i,v) => {\n    this.setState({\n      idx:0,\n      rating:0,\n      starsIdx:i,\n      starsRating:v\n    });\n    this.props.starUpdate(this.state)\n  }\n\n  render() {\n    return (\n      <Starrate \n        _mouseOver={this._mouseOver}\n        onChange={this.handleChange} \n        idx={this.state.idx} \n        rating={this.state.rating}         \n        starsIdx={this.state.starsIdx}         \n        starsRating={this.state.starsRating}\n        update={this.props.update}\n      />\n    );\n  }\n}\n\nexport default Starshow;","import React, { Component } from 'react';\r\nimport { useConsumer } from '../context/context';\r\nimport Starshow from './Starshow';\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass Text extends Component {\r\n    state = {\r\n        update: false,\r\n        text: '',\r\n        starsIdx: this.props.info.starsIdx,\r\n        starsRating: this.props.info.starsRating,\r\n    }\r\n    authorized = false\r\n    handleUpdate = async () => {\r\n        const { update, text, starsIdx, starsRating } = this.state;\r\n        const { info, comment, setComment } = this.props;\r\n        if (update) {\r\n            setComment(\r\n                comment.map(item => (info.id === item.id ?\r\n                    {\r\n                        id: this.props.info.id,\r\n                        text: text,\r\n                        starsIdx: starsIdx,\r\n                        starsRating: starsRating,\r\n                        userId: info.userId,\r\n                        userName: info.userName,\r\n                        userImage: info.userImage,\r\n                        song: this.props.songInfo[0].id\r\n                    } : item))\r\n            )\r\n            await axios.put(`/api/comment/${this.props.info.id}/`, {\r\n                id: this.props.info.id,\r\n                text: text,\r\n                starsIdx: starsIdx,\r\n                starsRating: starsRating,\r\n                userId: info.userId,\r\n                userName: info.userName,\r\n                userImage: info.userImage,\r\n                song: this.props.songInfo[0].id\r\n            }).then(\r\n                this.props.onMode(\"result\")\r\n            ).catch(e => console.log(e.message))\r\n        } else {\r\n            this.setState({ text: info.text })\r\n        }\r\n        this.setState({\r\n            update: !update\r\n        })\r\n    }\r\n    handleRemove = async () => {\r\n        const { setComment, comment } = this.props\r\n        await axios.delete(`/api/comment/${this.props.info.id}`)\r\n        .then(this.props.onMode(\"result\"))\r\n        setComment(comment.filter(object => object.id !== this.props.info.id))\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    handleUpdateStar = (data) => {\r\n        this.setState({\r\n            starsIdx: data.starsIdx,\r\n            starsRating: data.starsRating\r\n        })\r\n    }\r\n    render() {\r\n        const { update } = this.state\r\n        if (this.props.info.userId === this.props.userInfo.userId) {\r\n            this.authorized = true\r\n        }\r\n        const style = {\r\n            border: '1px solid black',\r\n            padding: '8px',\r\n            margin: '8px'\r\n        }\r\n        return (\r\n            <div style={style}>\r\n                {\r\n                    update ?\r\n                        <div>\r\n                            <input\r\n                                name=\"text\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.text}\r\n                            ></input>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            {this.props.info.text}\r\n                        </div>\r\n                }\r\n                <Starshow\r\n                    starsIdx={this.state.starsIdx}\r\n                    starsRating={this.state.starsRating}\r\n                    update={this.state.update}\r\n                    starUpdate={this.handleUpdateStar}\r\n                ></Starshow> {this.state.starsIdx + this.state.starsRating}/10\r\n            {\r\n                    this.authorized ?\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                onClick={this.handleUpdate}\r\n                            >{update ? \"입력\" : \"수정\"}</button>\r\n\r\n                            <button\r\n                                type=\"submit\"\r\n                                onClick={this.handleRemove}\r\n                            >삭제</button>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default useConsumer(Text);","import React, { Component } from 'react';\r\nimport Text from './Text';\r\nimport { useConsumer } from '../context/context';\r\nclass Textlist extends Component {\r\n    state = { index: 0 }\r\n    moreReview = () => {\r\n        this.setState({ index: this.state.index + 5 })\r\n    }\r\n    pastReview = () => {\r\n        this.setState({ index: this.state.index-5})\r\n    }\r\n    render() {\r\n        const { comment } = this.props\r\n        const list = comment.map(\r\n            function (info, index, array) {\r\n                if ((index > array.length - this.state.index - 5)\r\n                &&(index<array.length-this.state.index)) {\r\n                    return (\r\n                        <div key={index}>\r\n                            <Text info={info} onMode={this.props.onMode}></Text>\r\n                        </div>\r\n                    )\r\n                }\r\n            }.bind(this)\r\n            // 같은 song 내 comment 별 id가 필요할 수도 있음. \r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <div>{list}</div>\r\n                <button type=\"submit\" onClick={this.moreReview}\r\n                >more review</button>\r\n                <button type=\"submit\" onClick={this.pastReview}\r\n                >past review</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default useConsumer(Textlist);","import React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { useConsumer } from \"../context/context\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      name:'',\n      image:'',\n      }\n  }\n\n  responseGoogle = async (res)=>{\n    const {userInfo,setUserInfo}=this.props\n    setUserInfo({\n      userId:res.googleId,\n      name:res.profileObj.name,\n      image:res.profileObj.imageUrl\n    })\n    if (userInfo.userId!==0){\n      this.props.onModeComment()\n    }\n  }\n\n  responseFail =(err)=>{\n    console.error(err);\n  }\n  responseLogout=()=>{\n    const {setUserInfo}=this.props\n    alert('로그아웃 되었습니다.')\n    setUserInfo({\n      userId:'',\n      name:'',\n      image:'',\n    })\n    console.log('logout')\n  }\n\n  showButton=()=>{\n    if(!this.props.userInfo.userId){\n      return(\n      <div>\n          <GoogleLogin\n            clientId=\"759462615946-ok4nmhfk4j05bv53s7mbgfs22fm0d4og.apps.googleusercontent.com\"\n            buttonText=\"의견 남기기\"\n            onSuccess={this.responseGoogle} \n            onFailure={this.responseFail}\n            cookiePolicy={'single_host_origin'}\n          />\n      </div>\n      )\n    }else{\n      return(\n      <div>\n        <GoogleLogout\n        clientId=\"759462615946-ok4nmhfk4j05bv53s7mbgfs22fm0d4og.apps.googleusercontent.com\"\n        buttonText=\"Logout\"\n        onLogoutSuccess={this.responseLogout}\n        ></GoogleLogout>\n\n        <button onClick={this.props.onModeComment}> 의견 남기기</button>\n      </div>\n      )\n    }\n  }\n\n\n  render() {\n    console.log(this.props.userInfo)\n    return (\n        <div>\n        {this.showButton()}\n        </div>\n      );\n  }\n}\n\nexport default useConsumer(Login);\n","import React, {Component } from 'react';\r\nimport Songinfo from './Songinfo';\r\nimport Textlist from './Textlist';\r\nimport { useConsumer } from '../context/context';\r\nimport Login from './Login';\r\n\r\nclass Textresult extends Component {\r\n    state = {  }\r\n\r\n    onModeComment=()=>{\r\n        this.props.onMode('comment')\r\n    }\r\n    onModeSearch=()=>{\r\n        this.props.onMode('search')\r\n    }\r\n    render() {\r\n        const{songInfo}=this.props\r\n        return ( \r\n        <div>\r\n            <Songinfo song={songInfo[0]}></Songinfo>\r\n            <div>총 {this.props.comment.length}명이 평가하였습니다.</div>\r\n            \r\n            <Textlist onMode = {this.props.onMode}></Textlist>\r\n            \r\n            <Login onModeComment={this.onModeComment}></Login>\r\n            <button type=\"button\" onClick={this.onModeSearch}> 뒤로 </button>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default useConsumer(Textresult);","import React, { Component } from 'react';\r\nimport Starshow from './Starshow';\r\nimport { useConsumer } from '../context/context';\r\nimport Songinfo from './Songinfo';\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass Commentform extends Component {\r\n    state = {\r\n        userId: this.props.userInfo.userId,\r\n        userName: this.props.userInfo.name,\r\n        userImage: this.props.userInfo.image,\r\n        // userId와 UserName을 백에서 추가, user 프로필 사진도 받을 수 있는데 나중에 디자인할 때 고려해봐야할듯\r\n        song: this.props.songInfo[0].title,\r\n        text: '',\r\n        starsIdx: '',\r\n        starsRating: ''\r\n    }\r\n    handleMode = () => {\r\n        this.props.onMode('result')\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    handleUpdateStar = (data) => {\r\n        this.setState({\r\n            starsIdx: data.starsIdx,\r\n            starsRating: data.starsRating\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        const { setComment, comment } = this.props\r\n        e.preventDefault();\r\n        await axios.post(\"/api/comment/\", {\r\n            song: this.props.songInfo[0].id,\r\n            text: this.state.text,\r\n            starsIdx: this.state.starsIdx,\r\n            starsRating: this.state.starsRating,\r\n            userId: this.state.userId,\r\n            userName: this.state.userName,\r\n            userImage: this.state.userImage\r\n        }).then(res => {\r\n            setComment(comment.concat({\r\n                id: res.data.id,\r\n                song: this.props.songInfo[0].id,\r\n                text: this.state.text,\r\n                starsIdx: this.state.starsIdx,\r\n                starsRating: this.state.starsRating,\r\n                userId: this.state.userId,\r\n                userName: this.state.userName,\r\n                userImage: this.state.userImage\r\n            }))\r\n            console.log(res.data)\r\n        }\r\n        )\r\n        this.handleMode()\r\n        //새로운 comment 작성 후 장고로 post하는 기능 만들기\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Songinfo song={this.props.songInfo[0]}></Songinfo>\r\n                <div>총 {this.props.comment.length}명이 평가하였습니다.</div>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <img src={this.state.userImage} alt=\"사용자 이미지\" ></img>\r\n                    <input\r\n                        name=\"text\"\r\n                        placeholder=\"이곳에 의견을 남겨주세요\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.text}\r\n                    ></input>\r\n                    <button type=\"submit\"\r\n                    >댓글 입력</button>\r\n                    <div>\r\n                        당신이 평가한 난이도는?\r\n                    <Starshow update={true} starUpdate={this.handleUpdateStar} ></Starshow>\r\n                        {this.state.starsIdx + this.state.starsRating}/10\r\n                    {/* 점수 입력할 떄 NaN이 나오는데 나중에 수정 예정 */}\r\n                    </div>\r\n                </form>\r\n                <button type=\"button\" onClick={this.handleMode}>뒤로</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default useConsumer(Commentform);","import React, { Component } from 'react';\nimport SearchForm from './components/Searchform';\nimport Textresult from './components/Textresult';\nimport Commentform from './components/Commentform';\nimport { InfoProvider } from './context/context';\nclass App extends Component {\n  state = { \n    mode:''\n  }\n  handleMode=(mode)=>{\n    this.setState({\n      mode:mode\n    })\n  }\n  chooseContent=()=>{\n    const{mode}=this.state\n    if (mode==='result'){\n      return (<Textresult onMode={this.handleMode}></Textresult>)\n    }else if(mode==='comment'){\n      return (<Commentform onMode={this.handleMode}></Commentform>)\n    }else{\n      return (<SearchForm onMode={this.handleMode}></SearchForm>)\n    }\n  }\n  render() { \n    console.log('app')\n    console.log(this.state.mode)\n    return (  \n      <InfoProvider>\n        {this.chooseContent()}\n      </InfoProvider>\n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}